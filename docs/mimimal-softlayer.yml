# The following line helps maintain current documentation at http://docs.cloudfoundry.org.
# code_snippet cf-minimal-softlayer start
---
name: cf
director_uuid: REPLACE_WITH_DIRECTOR_ID

releases:
- {name: cf, version: latest}
- {name: postgres, version: latest}
- {name: diego, version: latest}
- {name: etcd, version: latest}
- {name: garden-linux, version: latest}
- {name: cflinuxfs2-rootfs , version: latest}

networks:
- name: cf_private
  type: manual
  subnets:
  - range: 10.10.3.128/26
    gateway: 10.10.3.129
    reserved:
    - 10.10.3.128
    - 10.10.3.129
    - 10.10.3.130
    - 10.10.3.131
    static:
    - 10.10.3.132 - 10.10.3.162
    dns:
    - 10.10.5.159
    - 10.0.80.11
    - 10.0.80.12

- name: cf_dynamic
  type: dynamic
  dns
  - 10.10.5.159
  - 10.0.80.11
  - 10.0.80.12
  cloud_properties:
    PrimaryBackendNetworkComponent:
      NetworkVlan:
        Id: {REPLACE-WITH-VLAN-ID}
    PrivateNetworkOnlyFlag: true

resource_pools:
- cloud_properties:
    Bosh_ip: 10.10.5.159
    Datacenter:
      Name: {REPLACE-WITH-DATACENTER-NAME}
    Domain: softlayer.com
    EphemeralDiskSize: 100
    HourlyBillingFlag: true
    MaxMemory: 2048
    StartCpus: 2
    VmNamePrefix: cf-softlayer-
  env:
    bosh:
      keep_root_password: true
      password: {REPLACE-WITH-HASH-OF-THE-PASSWORD}
  name: small_z1
  network: cf_private
  stemcell:
    name: bosh-softlayer-xen-ubuntu-trusty-go_agent
    version: latest
- cloud_properties:
    Bosh_ip: 10.10.5.159
    Datacenter:
      Name: {REPLACE-WITH-DATACENTER-NAME}
    Domain: softlayer.com
    EphemeralDiskSize: 100
    HourlyBillingFlag: true
    MaxMemory: 2048
    StartCpus: 2
    VmNamePrefix: cf-softlayer-
  env:
    bosh:
      keep_root_password: true
      password: {REPLACE-WITH-HASH-OF-THE-PASSWORD}
  name: diego
  network: cf_private
  stemcell:
    name: bosh-softlayer-xen-ubuntu-trusty-go_agent
    version: latest
- cloud_properties:
    Bosh_ip: 10.10.5.159
    Datacenter:
      Name: {REPLACE-WITH-DATACENTER-NAME}
    Domain: softlayer.com
    EphemeralDiskSize: 100
    HourlyBillingFlag: true
    MaxMemory: 2048
    StartCpus: 2
    VmNamePrefix: cf-softlayer-
  env:
    bosh:
      keep_root_password: true
      password: {REPLACE-WITH-HASH-OF-THE-PASSWORD}
  name: small
  network: cf_private
  stemcell:
    name: bosh-softlayer-xen-ubuntu-trusty-go_agent
    version: latest

compilation:
  cloud_properties:
    Bosh_ip: 10.10.5.159
    Datacenter:
      Name: {REPLACE-WITH-DATACENTER-NAME}
    Domain: softlayer.com
    EphemeralDiskSize: 100
    HourlyBillingFlag: true
    MaxMemory: 4096
    StartCpus: 4
    VmNamePrefix: cf-softlayer-
  network: cf_dynamic
  reuse_compilation_vms: true
  workers: 6

update:
  canaries: 1
  max_in_flight: 1
  serial: false
  canary_watch_time: 30000-600000
  update_watch_time: 5000-600000

jobs:
- name: nats_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: nats, release: cf}
  - {name: nats_stream_forwarder, release: cf}
  networks:
  - name: cf_dynamic
  - name: cf_private
    static_ips: [10.10.3.132]
    default: [gateway, dns]

- name: etcd_z1
  instances: 1
  resource_pool: small_z1
  persistent_disk: 102400
  templates:
  - {name: etcd, release: cf}
  - {name: etcd_metrics_server, release: cf}
  networks:
  - name: cf_dynamic
  - name: cf_private
    static_ips: [10.10.3.133]
    default: [gateway, dns]
  properties:
    etcd_metrics_server:
      nats:
        machines: [10.10.3.132]
        password: PASSWORD
        username: nats

- name: consul_z1
  instances: 1
  persistent_disk: 1024
  resource_pool: small_z1
  templates:
  - {name: consul_agent, release: cf}
  networks:
  - name: cf_dynamic
  - name: cf_private
    static_ips: [10.10.3.134]
    default: [gateway, dns]
  properties:
    consul:
      agent:
        mode: server

- name: diego_cell_z1
  instances: 1
  resource_pool: diego
  templates:
  - name: consul_agent
    release: cf
  - name: rep
    release: diego
  - name: garden
    release: garden-linux
  - name: cflinuxfs2-rootfs-setup
    release: cflinuxfs2-rootfs
  networks:
  - name: cf_dynamic
  update:
    serial: true
    max_in_flight: 1
  properties:
    diego:
      rep:
        zone: z1

- name: diego_brain_z1
  instances: 1
  resource_pool: diego
  templates:
  - name: consul_agent
    release: cf
  - name: etcd
    release: etcd
  - name: bbs
    release: diego
  - name: auctioneer
    release: diego
  - name: stager
    release: cf
  - name: nsync
    release: cf
  - name: tps
    release: cf
  - name: cc_uploader
    release: cf
  - name: file_server
    release: diego
  - name: route_emitter
    release: diego
  persistent_disk: 20480
  networks:
  - name: cf_dynamic
  update:
    serial: true
    max_in_flight: 1
  properties:
    consul:
      agent:
        services:
          etcd: {}

- name: blobstore_z1
  instances: 1
  persistent_disk: 102400
  resource_pool: small_z1
  templates:
  - {name: blobstore, release: cf}
  - {name: route_registrar, release: cf}
  - {name: consul_agent, release: cf}
  networks:
  - name: cf_dynamic
  properties:
    consul:
      agent:
        services:
          blobstore: {}
    route_registrar:
      routes:
      - name: blobstore
        port: 8080
        registration_interval: 20s
        tags:
          component: blobstore
        uris:
        - "blobstore.REPLACE_WITH_SYSTEM_DOMAIN"

- name: postgres_z1
  instances: 1
  persistent_disk: 4096
  resource_pool: small_z1
  templates:
  - {name: postgres, release: postgres}
  networks:
  - name: cf_dynamic
  - name: cf_private
    static_ips: [10.10.3.135]
    default: [gateway, dns]
  update: {}

- name: api_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: cloud_controller_ng, release: cf}
  - {name: cloud_controller_worker, release: cf}
  - {name: cloud_controller_clock, release: cf}
  - {name: route_registrar, release: cf}
  - {name: consul_agent, release: cf}
  - {name: go-buildpack, release: cf}
  - {name: binary-buildpack, release: cf}
  - {name: nodejs-buildpack, release: cf}
  - {name: ruby-buildpack, release: cf}
  - {name: java-buildpack, release: cf}
  - {name: php-buildpack, release: cf}
  - {name: python-buildpack, release: cf}
  - {name: staticfile-buildpack, release: cf}
  networks:
  - name: cf_dynamic
  properties:
    consul:
      agent:
        services:
          cloud_controller_ng: {}
    route_registrar:
      routes:
      - name: api
        registration_interval: 20s
        port: 9022
        uris:
        - "api.REPLACE_WITH_SYSTEM_DOMAIN"

- name: ha_proxy_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: haproxy, release: cf}
  - {name: consul_agent, release: cf}
  networks:
  - name: cf_private
    static_ips: [10.10.3.136]
  - name: cf_dynamic
    default: [gateway, dns]
  properties:
    ha_proxy:
      ssl_pem: |
        REPLACE_WITH_SSL_CERT_AND_KEY
    router:
      servers:
        z1:
        - 10.10.3.137

- name: doppler_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: doppler, release: cf}
  - {name: syslog_drain_binder, release: cf}
  networks:
  - name: cf_dynamic
  properties:
    doppler: {zone: z1}
    doppler_endpoint:
      shared_secret: PASSWORD

- name: loggregator_trafficcontroller_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: loggregator_trafficcontroller, release: cf}
  - {name: route_registrar, release: cf}
  networks:
  - name: cf_dynamic
  properties:
    traffic_controller: {zone: z1}
    route_registrar:
      routes:
      - name: doppler
        registration_interval: 20s
        port: 8081
        uris:
        - "doppler.REPLACE_WITH_SYSTEM_DOMAIN"
      - name: loggregator
        registration_interval: 20s
        port: 8080
        uris:
          - "loggregator.REPLACE_WITH_SYSTEM_DOMAIN"

- name: uaa_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: uaa, release: cf}
  - {name: route_registrar, release: cf}
  networks:
  - name: cf_dynamic
  properties:
    login:
      catalina_opts: -Xmx768m -XX:MaxPermSize=256m
    route_registrar:
      routes:
      - name: uaa
        registration_interval: 20s
        port: 8080
        uris:
        - "uaa.REPLACE_WITH_SYSTEM_DOMAIN"
        - "*.uaa.REPLACE_WITH_SYSTEM_DOMAIN"
        - "login.REPLACE_WITH_SYSTEM_DOMAIN"
        - "*.login.REPLACE_WITH_SYSTEM_DOMAIN"
    uaa:
      admin:
        client_secret: PASSWORD
      batch:
        password: PASSWORD
        username: batch_user
      cc:
        client_secret: PASSWORD
      scim:
        userids_enabled: true
        users:
          - name: admin
            password: PASSWORD
            groups:
              - scim.write
              - scim.read
              - openid
              - cloud_controller.admin
              - doppler.firehose
              - routing.router_groups.read
    uaadb:
      address: 10.10.3.135
      databases:
      - {name: uaadb, tag: uaa}
      db_scheme: postgresql
      port: 5524
      roles:
      - {name: uaaadmin, password: PASSWORD, tag: admin}

- name: router_z1
  instances: 1
  resource_pool: small_z1
  templates:
  - {name: gorouter, release: cf}
  - {name: consul_agent, release: cf}
  networks:
  - name: cf_dynamic
    default: [gateway, dns]
  - name: cf_private
    static_ips: [10.10.3.137]
  properties:
    dropsonde: {enabled: true}

properties:
  router:
    route_services_secret: PASSWORD
    ssl_skip_validation: true
  networks: {apps: cf_private}
  app_domains: [REPLACE_WITH_SYSTEM_DOMAIN]
  cc:
    allow_app_ssh_access: true
    default_to_diego_backend: true
    internal_api_user: internal_user
    buildpacks:
      blobstore_type: webdav
      webdav_config:
        blobstore_timeout: 5
        password: PASSWORD
        private_endpoint: https://blobstore.service.cf.internal:4443
        public_endpoint: https://blobstore.REPLACE_WITH_SYSTEM_DOMAIN
        secret: PASSWORD
        username: blobstore-username
    droplets:
      blobstore_type: webdav
      webdav_config:
        blobstore_timeout: 5
        password: PASSWORD
        private_endpoint: https://blobstore.service.cf.internal:4443
        public_endpoint: https://blobstore.REPLACE_WITH_SYSTEM_DOMAIN
        secret: PASSWORD
        username: blobstore-username
    external_port: 9022
    packages:
      blobstore_type: webdav
      webdav_config:
        blobstore_timeout: 5
        password: PASSWORD
        private_endpoint: https://blobstore.service.cf.internal:4443
        public_endpoint: https://blobstore.REPLACE_WITH_SYSTEM_DOMAIN
        secret: PASSWORD
        username: blobstore-username
    resource_pool:
      blobstore_type: webdav
      webdav_config:
        blobstore_timeout: 5
        password: PASSWORD
        private_endpoint: https://blobstore.service.cf.internal:4443
        public_endpoint: https://blobstore.REPLACE_WITH_SYSTEM_DOMAIN
        secret: PASSWORD
        username: blobstore-username
    bulk_api_password: PASSWORD
    db_encryption_key: PASSWORD
    default_running_security_groups: [public_networks, dns]
    default_staging_security_groups: [public_networks, dns]
    install_buildpacks:
    - {name: java_buildpack, package: buildpack_java}
    - {name: ruby_buildpack, package: ruby-buildpack}
    - {name: nodejs_buildpack, package: nodejs-buildpack}
    - {name: go_buildpack, package: go-buildpack}
    - {name: python_buildpack, package: python-buildpack}
    - {name: php_buildpack, package: php-buildpack}
    - {name: staticfile_buildpack, package: staticfile-buildpack}
    - {name: binary_buildpack, package: binary-buildpack}
    internal_api_password: PASSWORD
    quota_definitions:
      default:
        memory_limit: 102400
        non_basic_services_allowed: true
        total_routes: 1000
        total_services: -1
    security_group_definitions:
    - name: public_networks
      rules:
      - {destination: 0.0.0.0-9.255.255.255, protocol: all}
      - {destination: 11.0.0.0-169.253.255.255, protocol: all}
      - {destination: 169.255.0.0-172.15.255.255, protocol: all}
      - {destination: 172.32.0.0-192.167.255.255, protocol: all}
      - {destination: 192.169.0.0-255.255.255.255, protocol: all}
    - name: dns
      rules:
      - {destination: 0.0.0.0/0, ports: '53', protocol: tcp}
      - {destination: 0.0.0.0/0, ports: '53', protocol: udp}
    srv_api_uri: https://api.REPLACE_WITH_SYSTEM_DOMAIN
    staging_upload_password: PASSWORD
    staging_upload_user: staging_upload_user
  ccdb:
    address: 10.10.3.135
    databases:
    - {name: ccdb, tag: cc}
    db_scheme: postgres
    port: 5524
    roles:
    - {name: ccadmin, password: PASSWORD, tag: admin}
  consul:
    agent:
      log_level: null
      domain: cf.internal
      servers:
        lan:
        - 10.10.3.134
    encrypt_keys:
    - PASSWORD
    ca_cert: |
      REPLACE_WITH_CERT
    server_cert: |
      REPLACE_WITH_CERT
    agent_cert: |
      REPLACE_WITH_CERT
    server_key: |
      REPLACE_WITH_KEY
    agent_key: |
      REPLACE_WITH_KEY

  blobstore:
    admin_users:
    - password: PASSWORD
      username: blobstore-username
    secure_link:
      secret: PASSWORD
    tls:
      cert: |+
        REPLACE_WITH_CERT
      private_key: |+
        REPLACE_WITH_KEY
      ca_cert: |
        REPLACE_WITH_CERT
  databases:
    databases:
    - {name: ccdb, tag: cc, citext: true}
    - {name: uaadb, tag: uaa, citext: true}
    port: 5524
    roles:
    - {name: ccadmin, password: PASSWORD, tag: admin}
    - {name: uaaadmin, password: PASSWORD, tag: admin}
  description: Cloud Foundry sponsored by Pivotal
  domain: REPLACE_WITH_SYSTEM_DOMAIN
  etcd:
    advertise_urls_dns_suffix: etcd.service.cf.internal
    cluster:
    - name: diego_z1
      instances: 1
    machines: ["etcd.service.cf.internal"]
    peer_require_ssl: false
    require_ssl: false

  logger_endpoint:
    port: 4443
  loggregator:
    etcd:
      machines: [10.10.3.133]
  loggregator_endpoint:
    shared_secret: PASSWORD
  metron_agent:
    zone: z1
    buffer_size: null
    deployment: minimal-aws
    enable_buffer: null
    preferred_protocol: null
    tls:
      client_cert: null
      client_key: null
  metron_endpoint:
    shared_secret: PASSWORD
  nats:
    machines: [10.10.3.132]
    password: PASSWORD
    port: 4222
    user: nats
  ssl:
    skip_cert_verify: true
  system_domain: REPLACE_WITH_SYSTEM_DOMAIN
  system_domain_organization: default_organization
  uaa:
    clients:
      cf:
        access-token-validity: 600
        authorities: uaa.none
        authorized-grant-types: implicit,password,refresh_token
        autoapprove: true
        override: true
        refresh-token-validity: 2592000
        scope: cloud_controller.read,cloud_controller.write,openid,password.write,cloud_controller.admin,scim.read,scim.write,doppler.firehose,uaa.user,routing.router_groups.read
      cc-service-dashboards:
        authorities: clients.read,clients.write,clients.admin
        authorized-grant-types: client_credentials
        scope: openid,cloud_controller_service_permissions.read
        secret: PASSWORD
      cloud_controller_username_lookup:
        authorities: scim.userids
        authorized-grant-types: client_credentials
        secret: PASSWORD
      cc_routing:
        authorities: routing.router_groups.read
        secret: PASSWORD
        authorized-grant-types: client_credentials
      gorouter:
        authorities: routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        secret: PASSWORD
      tcp_emitter:
        authorities: routing.routes.write,routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        secret: PASSWORD
      tcp_router:
        authorities: routing.routes.read
        authorized-grant-types: client_credentials,refresh_token
        secret: PASSWORD
      doppler:
        authorities: uaa.resource
        secret: PASSWORD
      login:
        authorities: oauth.login,scim.write,clients.read,notifications.write,critical_notifications.write,emails.write,scim.userids,password.write
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        redirect-uri: https://login.REPLACE_WITH_SYSTEM_DOMAIN
        scope: openid,oauth.approvals
        secret: PASSWORD
      servicesmgmt:
        authorities: uaa.resource,oauth.service,clients.read,clients.write,clients.secret
        authorized-grant-types: authorization_code,client_credentials,password,implicit
        autoapprove: true
        redirect-uri: https://servicesmgmt.REPLACE_WITH_SYSTEM_DOMAIN/auth/cloudfoundry/callback
        scope: openid,cloud_controller.read,cloud_controller.write
        secret: PASSWORD

    jwt:
      signing_key: |
        REPLACE_WITH_KEY
      verification_key: |
        REPLACE_WITH_KEY

    ssl:
      port: -1
    url: https://uaa.REPLACE_WITH_SYSTEM_DOMAIN
  capi:
    nsync:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        base_url: https://api.REPLACE_WITH_SYSTEM_DOMAIN
        basic_auth_password: PASSWORD
      diego_privileged_containers: true
    tps:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        base_url: https://api.REPLACE_WITH_SYSTEM_DOMAIN
        basic_auth_password: PASSWORD
      traffic_controller_url: wss://doppler.REPLACE_WITH_SYSTEM_DOMAIN:443 
    tps_listener:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        base_url: https://api.REPLACE_WITH_SYSTEM_DOMAIN
        basic_auth_password: PASSWORD
    stager:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        base_url: https://api.REPLACE_WITH_SYSTEM_DOMAIN
        basic_auth_password: PASSWORD
  diego:
    nsync:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        base_url: https://api.REPLACE_WITH_SYSTEM_DOMAIN
        basic_auth_password: PASSWORD
      diego_privileged_containers: true
    tps:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        base_url: https://api.REPLACE_WITH_SYSTEM_DOMAIN
        basic_auth_password: PASSWORD
      traffic_controller_url: wss://doppler.REPLACE_WITH_SYSTEM_DOMAIN:443
    tps_listener:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        base_url: https://api.REPLACE_WITH_SYSTEM_DOMAIN
        basic_auth_password: PASSWORD
    stager:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      cc:
        base_url: https://api.REPLACE_WITH_SYSTEM_DOMAIN
        basic_auth_password: PASSWORD
    auctioneer:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
    bbs:
      active_key_label: active
      encryption_keys:
      - label: active
        passphrase: PASSWORD
      ca_cert: ""
      etcd:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      require_ssl: false
      server_cert: ""
      server_key: ""
    converger:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
    rep:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      preloaded_rootfses: ["cflinuxfs2:/var/vcap/packages/cflinuxfs2/rootfs"]
    executor:
      memory_capacity_mb: 30720
      disk_capacity_mb: 163840
    route_emitter:
      bbs:
        ca_cert: ""
        client_cert: ""
        client_key: ""
        require_ssl: false
      nats:
        machines: [10.10.3.132]
        password: PASSWORD
        port: 4222
        user: nats
    ssl:
      skip_cert_verify: true
  garden:
    graph_cleanup_threshold_in_mb: 0
    persistent_image_list: ["/var/vcap/packages/cflinuxfs2/rootfs"]
    deny_networks:
    - 0.0.0.0/0

# code_snippet cf-minimal-softlayer end
# The previous line helps maintain current documentation at http://docs.cloudfoundry.org.

